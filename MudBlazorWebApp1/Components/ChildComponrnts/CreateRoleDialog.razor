@inject RoleManager<Role> RoleManager
@inject IUnitOfWork UOW

<MudDialog>
    <DialogContent>
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudGrid Class="pa-5">
                <MudTextField Label="Name" Class="mt-3"
                              @bind-Value="model.Name" For="@(() => model.Name)" Required="true" RequiredError="Required" />
                
            </MudGrid>
            @if (!string.IsNullOrEmpty(error))
            {
                <MudItem xs="12" sm="5">
                    <MudPaper Class="pa-4 mud-height-full">
                        <MudText Typo="Typo.subtitle2">@error</MudText>
                    </MudPaper>
                </MudItem>
            }
            <MudButton OnClick="Cancel" Class="mt-5">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml5 mt-5">
                @(IsEditMode ? "Update" : "Add")
            </MudButton>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
    [Parameter] public Role? Role { get; set; } 
    private bool IsEditMode => Role != null;
    private CreateRoleModel model { get; set; } = new();
    private string error { get; set; }

    protected override void OnInitialized()
    {
        if (Role != null)
        {
            model.Name = Role.Name;
        }
    }
    public class CreateRoleModel
    {
        [Required]
        public string Name { get; set; }
    }
    private void Cancel() => MudDialog.Cancel();

    private async Task OnValidSubmit(EditContext context)
    {
        if (IsEditMode)
        {
            Role.Name = model.Name;
            await RoleManager.UpdateAsync(Role);
        }
        else 
        {
            var newRole = new Role { Name = model.Name };
            await RoleManager.CreateAsync(newRole);
        }

        await UOW.SaveChangesAsync();
        MudDialog.Close(DialogResult.Ok(true));
    }
}